@using SummonersGift.Data;
@using SummonersGift.Models;
@using SummonersGift.Models.Riot;
@using SummonersGift.Models.View;
@using SummonersGift.Web;
@model DataFetchResult<SummonerFullViewModel>


@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    ViewBag.Title = "Index";
}

<h2>Summoner Information</h2>

@{ if (@Model.Success)
    {
    var summoner = Model.GetResult;

    <h3>@summoner.SummonerBasics.Name</h3>

    <p>Level: @summoner.SummonerBasics.SummonerLevel</p>

    <p>Last active on: @summoner.SummonerBasics.RevisionDate</p>

    <p>Rank: @summoner.SummonerBasics.DisplayRank</p>

    if (@summoner.StatsAvailable)
    {
        var matches = summoner.Matches;
        var stats = summoner.StatTables;
        
        foreach (var statTable in stats)
        {
            @Html.Partial("~/Views/Shared/_StatTablePartial.cshtml", statTable);
        }
        
        foreach (Match i in matches)
        {
            @Html.Partial("~/Views/Shared/_MatchPartial.cshtml", i);
        }
    }
}
else
{
    <p>No summoner information found...</p>
    <p>@Model.ErrorMessage</p>
}

    <p>Api calls: @Model.ApiCalls</p>
    <p>Time taken: @Model.TimeTaken.TotalSeconds</p>

}

